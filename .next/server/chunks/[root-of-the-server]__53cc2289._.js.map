{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/scan/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\n\ninterface ScanRequest {\n  target: string\n  frameworks: string[]\n  depth: string\n  includeVulnScan: boolean\n  includePenetrationTest: boolean\n  options: {\n    realTimeMonitoring: boolean\n    autoRemediation: boolean\n    alertThreshold: number\n    aiAnalysis: boolean\n    threatIntelligence: boolean\n  }\n}\n\ninterface Finding {\n  id: string\n  control: string\n  status: 'pass' | 'fail' | 'warning'\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  description: string\n  evidence: string\n  remediation: string\n}\n\ninterface Vulnerability {\n  id: string\n  type: string\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  description: string\n  impact: string\n  solution: string\n  cvss: number\n}\n\nconst COMPLIANCE_CONTROLS = {\n  hipaa: [\n    { id: 'HIPAA-164.308', name: 'Administrative Safeguards', category: 'Administrative' },\n    { id: 'HIPAA-164.310', name: 'Physical Safeguards', category: 'Physical' },\n    { id: 'HIPAA-164.312', name: 'Technical Safeguards', category: 'Technical' },\n    { id: 'HIPAA-164.314', name: 'Organizational Requirements', category: 'Organizational' }\n  ],\n  iso27001: [\n    { id: 'ISO-A.5.1', name: 'Information Security Policies', category: 'Security Policy' },\n    { id: 'ISO-A.6.1', name: 'Organization of Information Security', category: 'Organization' },\n    { id: 'ISO-A.8.1', name: 'Asset Management', category: 'Asset Management' },\n    { id: 'ISO-A.9.1', name: 'Access Control', category: 'Access Control' },\n    { id: 'ISO-A.10.1', name: 'Cryptography', category: 'Cryptography' }\n  ],\n  soc2: [\n    { id: 'SOC2-CC1', name: 'Control Environment', category: 'Security' },\n    { id: 'SOC2-CC2', name: 'Communication and Information', category: 'Security' },\n    { id: 'SOC2-CC3', name: 'Risk Assessment', category: 'Security' },\n    { id: 'SOC2-A1', name: 'System Availability', category: 'Availability' }\n  ],\n  pci: [\n    { id: 'PCI-1', name: 'Install and maintain firewall configuration', category: 'Network Security' },\n    { id: 'PCI-2', name: 'Do not use vendor-supplied defaults', category: 'System Configuration' },\n    { id: 'PCI-3', name: 'Protect stored cardholder data', category: 'Data Protection' },\n    { id: 'PCI-4', name: 'Encrypt transmission of cardholder data', category: 'Data Protection' }\n  ],\n  gdpr: [\n    { id: 'GDPR-Art5', name: 'Principles of processing', category: 'Lawfulness' },\n    { id: 'GDPR-Art6', name: 'Lawfulness of processing', category: 'Lawfulness' },\n    { id: 'GDPR-Art25', name: 'Data protection by design', category: 'Privacy by Design' },\n    { id: 'GDPR-Art32', name: 'Security of processing', category: 'Security' }\n  ],\n  nist: [\n    { id: 'NIST-ID.AM', name: 'Asset Management', category: 'Identify' },\n    { id: 'NIST-PR.AC', name: 'Identity Management', category: 'Protect' },\n    { id: 'NIST-DE.AE', name: 'Anomalies and Events', category: 'Detect' },\n    { id: 'NIST-RS.RP', name: 'Response Planning', category: 'Respond' }\n  ]\n}\n\nexport async function POST(request: Request) {\n  try {\n    const body: ScanRequest = await request.json()\n    \n    // Validate input\n    if (!body.target || !body.frameworks || body.frameworks.length === 0) {\n      return NextResponse.json(\n        { error: \"Target URL and at least one framework are required\" },\n        { status: 400 }\n      )\n    }\n\n    // Validate URL\n    let targetUrl: URL\n    try {\n      targetUrl = new URL(body.target.startsWith('http') ? body.target : `https://${body.target}`)\n    } catch {\n      return NextResponse.json(\n        { error: \"Invalid URL format\" },\n        { status: 400 }\n      )\n    }\n\n    const startTime = Date.now()\n\n    // Simulate network request to target\n    let headers: Record<string, string> = {}\n    let statusCode = 200\n    \n    try {\n      const response = await fetch(targetUrl.toString(), {\n        method: 'HEAD',\n        headers: { 'User-Agent': 'ComplianceAuditor/1.0' }\n      })\n      \n      statusCode = response.status\n      response.headers.forEach((value, key) => {\n        headers[key] = value\n      })\n    } catch (error) {\n      // Simulate headers for demo purposes\n      headers = {\n        'server': 'nginx/1.18.0',\n        'content-type': 'text/html',\n        'x-frame-options': 'SAMEORIGIN',\n        'x-content-type-options': 'nosniff',\n        'strict-transport-security': 'max-age=31536000',\n        'content-security-policy': \"default-src 'self'\",\n        'x-xss-protection': '1; mode=block',\n        'referrer-policy': 'strict-origin-when-cross-origin'\n      }\n      statusCode = 200\n    }\n\n    const executionTime = Date.now() - startTime\n\n    // Generate findings based on selected frameworks\n    const findings: Finding[] = []\n    let totalScore = 0\n\n    for (const framework of body.frameworks) {\n      const controls = COMPLIANCE_CONTROLS[framework as keyof typeof COMPLIANCE_CONTROLS] || []\n      \n      for (const control of controls) {\n        const finding = generateFinding(control, headers, body.options)\n        findings.push(finding)\n        \n        // Calculate score contribution\n        if (finding.status === 'pass') totalScore += 20\n        else if (finding.status === 'warning') totalScore += 10\n      }\n    }\n\n    // Calculate overall compliance score\n    const maxPossibleScore = findings.length * 20\n    const complianceScore = maxPossibleScore > 0 ? Math.round((totalScore / maxPossibleScore) * 100) : 0\n\n    // Generate vulnerabilities if vulnerability scanning is enabled\n    const vulnerabilities: Vulnerability[] = []\n    if (body.includeVulnScan) {\n      vulnerabilities.push(...generateVulnerabilities(headers, body.includePenetrationTest))\n    }\n\n    // Generate recommendations\n    const recommendations = generateRecommendations(findings, body.options)\n\n    const result = {\n      id: `scan-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      framework: body.frameworks.join(', '),\n      target: targetUrl.toString(),\n      status: 'completed' as const,\n      score: complianceScore,\n      findings,\n      recommendations,\n      executionTime,\n      vulnerabilities,\n      scanData: {\n        headers,\n        statusCode,\n        depth: body.depth,\n        options: body.options\n      }\n    }\n\n    return NextResponse.json(result)\n\n  } catch (error) {\n    console.error('Scan error:', error)\n    return NextResponse.json(\n      { error: \"Internal server error during scan\" },\n      { status: 500 }\n    )\n  }\n}\n\nfunction generateFinding(control: any, headers: Record<string, string>, options: any): Finding {\n  const securityHeaders = [\n    'content-security-policy',\n    'x-content-type-options',\n    'strict-transport-security',\n    'x-frame-options',\n    'x-xss-protection',\n    'referrer-policy'\n  ]\n\n  // Simulate compliance checking logic\n  let status: 'pass' | 'fail' | 'warning' = 'pass'\n  let severity: 'low' | 'medium' | 'high' | 'critical' = 'low'\n  let description = `${control.name} compliance check completed`\n  let evidence = 'Configuration verified'\n  let remediation = 'No action required'\n\n  // Check for security headers\n  if (control.category === 'Technical' || control.category === 'Security') {\n    const hasSecurityHeaders = securityHeaders.some(header => headers[header])\n    if (!hasSecurityHeaders) {\n      status = 'fail'\n      severity = 'high'\n      description = `Missing critical security headers for ${control.name}`\n      evidence = `Headers checked: ${Object.keys(headers).join(', ')}`\n      remediation = 'Implement proper security headers configuration'\n    } else if (securityHeaders.filter(header => headers[header]).length < 3) {\n      status = 'warning'\n      severity = 'medium'\n      description = `Partial implementation of security controls for ${control.name}`\n      evidence = `Present headers: ${securityHeaders.filter(header => headers[header]).join(', ')}`\n      remediation = 'Review and implement additional security headers'\n    }\n  }\n\n  // AI-powered analysis simulation\n  if (options.aiAnalysis) {\n    if (Math.random() > 0.7) {\n      severity = severity === 'low' ? 'medium' : severity\n      description += ' (AI-enhanced analysis detected potential issues)'\n    }\n  }\n\n  return {\n    id: `finding-${control.id}-${Date.now()}`,\n    control: control.id,\n    status,\n    severity,\n    description,\n    evidence,\n    remediation\n  }\n}\n\nfunction generateVulnerabilities(headers: Record<string, string>, includePenTest: boolean): Vulnerability[] {\n  const vulnerabilities: Vulnerability[] = []\n\n  // Check for common vulnerabilities\n  if (!headers['x-frame-options']) {\n    vulnerabilities.push({\n      id: `vuln-${Date.now()}-1`,\n      type: 'Clickjacking',\n      severity: 'medium',\n      description: 'Missing X-Frame-Options header allows clickjacking attacks',\n      impact: 'Attackers can embed the site in malicious frames',\n      solution: 'Add X-Frame-Options: DENY or SAMEORIGIN header',\n      cvss: 5.4\n    })\n  }\n\n  if (!headers['content-security-policy']) {\n    vulnerabilities.push({\n      id: `vuln-${Date.now()}-2`,\n      type: 'XSS',\n      severity: 'high',\n      description: 'Missing Content Security Policy increases XSS risk',\n      impact: 'Cross-site scripting attacks may be possible',\n      solution: 'Implement a strict Content Security Policy',\n      cvss: 7.2\n    })\n  }\n\n  // Penetration testing findings\n  if (includePenTest) {\n    vulnerabilities.push({\n      id: `vuln-${Date.now()}-3`,\n      type: 'Information Disclosure',\n      severity: 'low',\n      description: 'Server version information disclosed in headers',\n      impact: 'Attackers can identify specific server software versions',\n      solution: 'Configure server to hide version information',\n      cvss: 3.1\n    })\n  }\n\n  return vulnerabilities\n}\n\nfunction generateRecommendations(findings: Finding[], options: any): string[] {\n  const recommendations: string[] = []\n  \n  const criticalFindings = findings.filter(f => f.severity === 'critical').length\n  const highFindings = findings.filter(f => f.severity === 'high').length\n  \n  if (criticalFindings > 0) {\n    recommendations.push(`Address ${criticalFindings} critical security findings immediately`)\n  }\n  \n  if (highFindings > 0) {\n    recommendations.push(`Review and remediate ${highFindings} high-priority issues`)\n  }\n  \n  const failedFindings = findings.filter(f => f.status === 'fail').length\n  if (failedFindings > 0) {\n    recommendations.push(`${failedFindings} compliance controls are failing and require attention`)\n  }\n  \n  if (options.autoRemediation) {\n    recommendations.push('Auto-remediation is enabled - some issues may be automatically resolved')\n  }\n  \n  if (options.aiAnalysis) {\n    recommendations.push('AI analysis suggests implementing additional monitoring for anomaly detection')\n  }\n  \n  recommendations.push('Schedule regular compliance scans to maintain security posture')\n  recommendations.push('Consider implementing continuous monitoring for real-time compliance tracking')\n  \n  return recommendations\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}